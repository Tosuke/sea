# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master
  - greenkeeper/*

pool:
  vmImage: "Ubuntu-16.04"

steps:
  - script: |
      docker run --name postgres -e POSTGRES_PASSWORD=onlyfortesting -d postgres:10-alpine
    displayName: "Run PostgreSQL"
  - script: |
      docker build -t rinsuki/sea:latest .
    displayName: "Build docker container"
  - script: |
      docker run --rm --link postgres:postgres -e DATABASE_URL="postgres://postgres:onlyfortesting@postgres/postgres" rinsuki/sea yarn migration:up
    displayName: "Run yarn migration:up"
  - script: |
      docker run --rm --link postgres:postgres -e DATABASE_URL="postgres://postgres:onlyfortesting@postgres/postgres" -v $(pwd)/coverage:/app/coverage rinsuki/sea sh -c 'yarn test --coverage --coverageReporters=cobertura --coverageReporters=html'
    displayName: "Run yarn test"
  - script: |
      python3 -c 'import os;r=open("./coverage/cobertura-coverage.xml", "r").read().replace("/app", os.getcwd());open("./coverage/cobertura-coverage.xml", "w").write(r)'
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: cobertura
      summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml
  - script: |
      docker run --rm --link postgres:postgres -e DATABASE_URL="postgres://postgres:onlyfortesting@postgres/postgres" rinsuki/sea yarn migration:downall
    displayName: "Run yarn migration:downall"
  - task: Docker@2
    displayName: "Login to DockerHub"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      command: login
      containerRegistry: dockerHub
  - task: Docker@2
    displayName: "Push to DockerHub"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      command: push
      repository: rinsuki/sea
      tags: latest
      containerRegistry: dockerHub
  - task: Docker@2
    displayName: "Log-out from DockerHub"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      command: logout
      containerRegistry: dockerHub
  - task: JenkinsQueueJob@2
    displayName: "Deploy"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      serverEndpoint: jenkins
      jobName: sea-sns
      captureConsole: false
